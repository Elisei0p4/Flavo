# Generated by Django 5.2.6 on 2025-09-19 14:35

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Название категории"
                    ),
                ),
                ("slug", models.SlugField(blank=True, max_length=120, unique=True)),
                (
                    "icon",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="category_icons/",
                        verbose_name="Иконка",
                    ),
                ),
            ],
            options={
                "verbose_name": "Категория",
                "verbose_name_plural": "Категории",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Collection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Название коллекции"
                    ),
                ),
                ("description", models.TextField(verbose_name="Описание")),
                (
                    "image",
                    models.ImageField(
                        upload_to="collections/", verbose_name="Изображение"
                    ),
                ),
                ("slug", models.SlugField(blank=True, max_length=120, unique=True)),
            ],
            options={
                "verbose_name": "Коллекция",
                "verbose_name_plural": "Коллекции",
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Название тега"
                    ),
                ),
                ("slug", models.SlugField(blank=True, max_length=120, unique=True)),
            ],
            options={
                "verbose_name": "Тег",
                "verbose_name_plural": "Теги",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Название")),
                (
                    "slug",
                    models.SlugField(
                        blank=True, max_length=120, unique=True, verbose_name="URL Slug"
                    ),
                ),
                ("description", models.TextField(verbose_name="Описание")),
                (
                    "ingredients",
                    models.TextField(blank=True, verbose_name="Состав и аллергены"),
                ),
                (
                    "chef_recommendation",
                    models.TextField(blank=True, verbose_name="Рекомендация от шефа"),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Цена"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to="products/", verbose_name="Изображение"
                    ),
                ),
                (
                    "sku",
                    models.CharField(
                        blank=True, max_length=50, unique=True, verbose_name="Артикул"
                    ),
                ),
                (
                    "stock",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Остаток на складе",
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        verbose_name="Рекомендуемый продукт",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products",
                        to="products.category",
                        verbose_name="Категория",
                    ),
                ),
                (
                    "collections",
                    models.ManyToManyField(
                        blank=True,
                        related_name="products",
                        to="products.collection",
                        verbose_name="Коллекции",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True,
                        related_name="products",
                        to="products.tag",
                        verbose_name="Теги",
                    ),
                ),
            ],
            options={
                "verbose_name": "Продукт",
                "verbose_name_plural": "Продукты",
                "indexes": [
                    models.Index(fields=["price"], name="products_pr_price_9b1a5f_idx")
                ],
            },
        ),
    ]
