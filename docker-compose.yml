services:
  db:
    image: postgres:14.0-alpine
    container_name: flavo_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0-alpine
    container_name: flavo_redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: flavo_rabbitmq
    ports:
      - "15672:15672"
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: flavo_jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
      - "6831:6831/udp"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:14269 || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s

  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: pizza-project-backend:dev
    container_name: flavo_backend
    entrypoint: /app/entrypoint.sh
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    env_file:
      - ./.env
    environment:
      - DJANGO_SETTINGS_MODULE=pizza_project.settings.local
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
    depends_on:
      db: { condition: service_healthy }
      redis: { condition: service_healthy }
      rabbitmq: { condition: service_healthy }
      jaeger: { condition: service_healthy }
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 8000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    image: pizza-project-frontend:dev
    container_name: flavo_frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 5173 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  nginx:
    build: ./nginx
    container_name: flavo_nginx
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8080:80"
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.celery.dev 
    image: pizza-project-celery-worker:dev
    container_name: flavo_celery_worker
    entrypoint: /app/entrypoint-celery.sh
    command: celery -A pizza_project worker -l info
    volumes:
      - .:/app
      - media_volume:/app/media
    env_file:
      - ./.env
    environment:
      - DJANGO_SETTINGS_MODULE=pizza_project.settings.local
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
    depends_on:
      redis: { condition: service_healthy }
      rabbitmq: { condition: service_healthy }
      db: { condition: service_healthy }
      jaeger: { condition: service_healthy }

volumes:
  postgres_data:
  static_volume:
  media_volume: